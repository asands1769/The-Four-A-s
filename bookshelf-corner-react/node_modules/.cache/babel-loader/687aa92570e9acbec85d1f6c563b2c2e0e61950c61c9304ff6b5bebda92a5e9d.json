{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/The-Four-A-s/bookshelf-corner-react/src/components/CreateEvent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from \"react-datetime-picker\";\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateEvent() {\n  _s();\n  const [eventDate, setEventDate] = useState(new Date());\n  const session = useSession(); //user/ when session exist, there is a User\n  const supabase = useSupabaseClient(); // talk to supabase\n  const {\n    isLoading\n  } = useSessionContext();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging into Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n  console.log(session);\n  console.log(eventDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreateEvent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        margin: \"30px auto\"\n      },\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hello \", session.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Event Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          onChange: setEventDate,\n          value: eventDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => googleSignIn(),\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateEvent, \"89dnrORJEvZk7snReVT3Xrn8oC8=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = CreateEvent;\nexport default CreateEvent;\nvar _c;\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"names":["React","useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","CreateEvent","_s","eventDate","setEventDate","Date","session","supabase","isLoading","googleSignIn","error","auth","signInWithOAuth","provider","options","scopes","alert","console","log","signOut","className","children","style","width","margin","user","email","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","onClick","_c","$RefreshReg$"],"sources":["/Users/diana/Desktop/The-Four-A-s/bookshelf-corner-react/src/components/CreateEvent.js"],"sourcesContent":["import React from \"react\";\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react'\nimport DateTimePicker from \"react-datetime-picker\";\nimport { useState } from 'react';\n\nfunction CreateEvent() {\n    const [ eventDate, setEventDate ] = useState(new Date());\n\n    const session = useSession(); //user/ when session exist, there is a User\n    const supabase = useSupabaseClient(); // talk to supabase\n    const { isLoading } = useSessionContext();\n\n    if(isLoading) {\n        return <></>\n    }\n     \n    async function googleSignIn() {\n        const { error } = await supabase.auth.signInWithOAuth({\n            provider: 'google',\n            options: {\n                scopes: 'https://www.googleapis.com/auth/calendar'\n            }\n        });\n        if(error) {\n            alert(\"Error logging into Google provider with Supabase\");\n            console.log(error);\n        }\n    }\n\n    async function signOut() {\n        await supabase.auth.signOut();\n    }\n\n    console.log(session);\n    console.log(eventDate);\n\n    return(\n        <div className=\"CreateEvent\">\n            <div style={{width: \"400px\", margin: \"30px auto\"}}>\n                {session ?\n                <>\n                    <h2>Hello {session.user.email}</h2>\n                    <p>Event Date</p>\n                    <DateTimePicker onChange={setEventDate} value={eventDate} />\n                    <button onClick={() => signOut()}>Sign Out</button>\n                </>\n                :\n                <>\n                    <button onClick={() => googleSignIn()}>Sign In With Google</button>\n                </>\n                }\n            </div>\n        </div>\n    );\n\n}\n\nexport default CreateEvent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}