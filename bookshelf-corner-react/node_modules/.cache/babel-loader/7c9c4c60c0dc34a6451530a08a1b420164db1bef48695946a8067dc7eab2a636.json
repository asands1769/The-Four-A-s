{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit\\\\The-Four-A-s\\\\bookshelf-corner-react\\\\src\\\\components\\\\BookShelf.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookShelf = () => {\n  _s();\n  const [bookshelves, setBookshelves] = useState([]);\n  const [newBookShelf, setNewBookShelf] = useState({\n    // Set initial values for the new bookshelf\n    // For example: name: \"\", bookCategory: \"\", tagType: \"\"\n  });\n  useEffect(() => {\n    // Fetch all bookshelves when the component mounts\n    fetchBookshelves();\n  }, []);\n  const fetchBookshelves = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/bookshelves');\n      const data = await response.json();\n      setBookshelves(data);\n    } catch (error) {\n      console.error('Error fetching bookshelves:', error);\n    }\n  };\n  const addBookShelf = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/bookshelves/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newBookShelf)\n      });\n      if (response.ok) {\n        // If the request is successful, fetch the updated list of bookshelves\n        fetchBookshelves();\n        // Reset the form\n        setNewBookShelf({\n          // Reset initial values for the new bookshelf\n          // For example: name: \"\", bookCategory: \"\", tagType: \"\"\n        });\n      } else {\n        console.error('Error adding bookshelf:', response.status);\n      }\n    } catch (error) {\n      console.error('Error adding bookshelf:', error);\n    }\n  };\n  const deleteBookShelf = async id => {\n    try {\n      const response = await fetch(`http://localhost:8080/bookshelves/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // If the request is successful, fetch the updated list of bookshelves\n        fetchBookshelves();\n      } else {\n        console.error('Error deleting bookshelf:', response.status);\n      }\n    } catch (error) {\n      console.error('Error deleting bookshelf:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bookshelf Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Bookshelf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newBookShelf.name,\n        onChange: e => setNewBookShelf({\n          ...newBookShelf,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBookShelf,\n        children: \"Add Bookshelf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Bookshelves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: bookshelves.map(bookshelf => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [bookshelf.name, \" - \", bookshelf.bookCategory, \" - \", bookshelf.tagType, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteBookShelf(bookshelf.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, bookshelf.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(BookShelf, \"OAvhvRPvsJgmBbpqgsoGSc92wtA=\");\n_c = BookShelf;\nexport default BookShelf;\nvar _c;\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BookShelf","_s","bookshelves","setBookshelves","newBookShelf","setNewBookShelf","fetchBookshelves","response","fetch","data","json","error","console","addBookShelf","method","headers","body","JSON","stringify","ok","status","deleteBookShelf","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","name","onChange","e","target","onClick","map","bookshelf","bookCategory","tagType","_c","$RefreshReg$"],"sources":["C:/Users/sumit/The-Four-A-s/bookshelf-corner-react/src/components/BookShelf.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst BookShelf = () => {\r\n  const [bookshelves, setBookshelves] = useState([]);\r\n  const [newBookShelf, setNewBookShelf] = useState({\r\n    // Set initial values for the new bookshelf\r\n    // For example: name: \"\", bookCategory: \"\", tagType: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch all bookshelves when the component mounts\r\n    fetchBookshelves();\r\n  }, []);\r\n\r\n  const fetchBookshelves = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/bookshelves');\r\n      const data = await response.json();\r\n      setBookshelves(data);\r\n    } catch (error) {\r\n      console.error('Error fetching bookshelves:', error);\r\n    }\r\n  };\r\n\r\n  const addBookShelf = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/bookshelves/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newBookShelf),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // If the request is successful, fetch the updated list of bookshelves\r\n        fetchBookshelves();\r\n        // Reset the form\r\n        setNewBookShelf({\r\n          // Reset initial values for the new bookshelf\r\n          // For example: name: \"\", bookCategory: \"\", tagType: \"\"\r\n        });\r\n      } else {\r\n        console.error('Error adding bookshelf:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding bookshelf:', error);\r\n    }\r\n  };\r\n\r\n  const deleteBookShelf = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/bookshelves/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        // If the request is successful, fetch the updated list of bookshelves\r\n        fetchBookshelves();\r\n      } else {\r\n        console.error('Error deleting bookshelf:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting bookshelf:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bookshelf Management</h2>\r\n\r\n      {/* Form to add a new bookshelf */}\r\n      <div>\r\n        <h3>Add New Bookshelf</h3>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={newBookShelf.name}\r\n          onChange={(e) => setNewBookShelf({ ...newBookShelf, name: e.target.value })}\r\n        />\r\n        {/* Other input fields for bookCategory, tagType, etc. */}\r\n        <button onClick={addBookShelf}>Add Bookshelf</button>\r\n      </div>\r\n\r\n      {/* List of existing bookshelves */}\r\n      <div>\r\n        <h3>Existing Bookshelves</h3>\r\n        <ul>\r\n          {bookshelves.map((bookshelf) => (\r\n            <li key={bookshelf.id}>\r\n              {bookshelf.name} - {bookshelf.bookCategory} - {bookshelf.tagType}\r\n              <button onClick={() => deleteBookShelf(bookshelf.id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelf;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}