{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\The-Four-A-s\\\\bookshelf-corner-react\\\\src\\\\components\\\\ViewBookList.js\",\n  _s = $RefreshSig$();\n// import React, { Component } from 'react';\n\n// class ViewBookList extends Component {\n//     constructor(props){\n//         super(props)\n\n//         this.state = {\n//             bookId: this.props.match ? this.props.match.params.bookId : '',\n//             books: {}\n//             };\n//     }\n//      componentDidMount() {\n//         // \n//         fetch(`http://localhost:8080/api/books${this.state.bookId}`)\n//             .then(response => response.json())\n//             .then(data => {\n//                 this.setState({ books: data });\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }\n\n//     render() {\n//         const { books } = this.state;\n//         return (\n//             <div>\n//                 <div className='card col-md-6 offset-md-3'>\n//                 <h3 className='text-center'>View BookList Page</h3>\n//                 <div className='card-body'>\n//                     <div className='row'>\n//                         <label>Book Title: </label>\n//                         <div>{books.bookTitle}</div>\n//                     </div>\n\n//                     <div className='row'>\n//                         <label>Book Author: </label>\n//                         <div>{books.bookAuthor}</div>\n//                     </div>\n\n//                     <div className='row'>\n//                         <label>Published Year: </label>\n//                         <div>{books.publishedYear}</div>\n//                     </div>\n\n//                     <div className='row'>\n//                         <label>Genre: </label>\n//                         <div>{books.genre}</div>\n//                     </div>\n//                     <div className='text-center'>{books.isAvailable ? 'Available to borrow' : 'Not Available'}</div>\n\n//                 </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n// export default ViewBookList;\n// import React, { useState, useEffect } from 'react';\n\n// const ViewBookList = () => {\n//   const [books, setBooks] = useState([]);\n\n//   useEffect(() => {\n//     // Function to fetch book data from the API\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8080/api/books');\n//         const data = await response.json();\n//         setBooks(data);\n//       } catch (error) {\n//         console.error('Error fetching book data:', error);\n//       }\n//     };\n\n//     // Call the fetchBooks function when the component mounts\n//     fetchBooks();\n//   }, []); // Empty dependency array ensures the effect runs only once on mount\n\n//   return (\n//     <div>\n//         <div className='card col-md-6 offset-md-3'>\n//         <h3 className='text-center'>Book Catalog</h3>\n//       <ul>\n//         {books.map((book) => (\n//           <div key={book.bookId}>\n//             <span className=\"label\">Book Title: {book.bookTitle}</span><br></br>\n//             <span className=\"label\">Book Author: {book.bookAuthor} </span><br></br>\n//             <span className=\"label\">Published Year: {book.publishedYear}</span><br></br>\n//             <span className=\"label\">Genre: {book.genre} </span><br></br>\n//             <div className='text-center'>{books.isAvailable ? 'Available to borrow' : 'Not Available'}</div>\n\n//           </div>\n//         ))}\n//       </ul>\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default ViewBookList;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewBookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    // Function to fetch book data from the API\n    const fetchBooks = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/api/books');\n        const data = await response.json();\n        setBooks(data);\n      } catch (error) {\n        console.error('Error fetching book data:', error);\n      }\n    };\n\n    // Call the fetchBooks function when the component mounts\n    fetchBooks();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-primary\",\n      children: \"Books Available to Borrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: [\"Book Title: \", book.bookTitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: [\"Book Author: \", book.bookAuthor, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 75\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: [\"Published Year: \", book.publishedYear]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 80\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: [\"Genre: \", book.genre, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"availability\",\n            children: book.isAvailable ? 'Available to borrow' : 'Not Available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, book.bookId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewBookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = ViewBookList;\nexport default ViewBookList;\nvar _c;\n$RefreshReg$(_c, \"ViewBookList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ViewBookList","_s","books","setBooks","fetchBooks","response","fetch","data","json","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","book","bookTitle","bookAuthor","publishedYear","genre","isAvailable","bookId","_c","$RefreshReg$"],"sources":["C:/Users/Admin/The-Four-A-s/bookshelf-corner-react/src/components/ViewBookList.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n\r\n// class ViewBookList extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             bookId: this.props.match ? this.props.match.params.bookId : '',\r\n//             books: {}\r\n//             };\r\n//     }\r\n//      componentDidMount() {\r\n//         // \r\n//         fetch(`http://localhost:8080/api/books${this.state.bookId}`)\r\n//             .then(response => response.json())\r\n//             .then(data => {\r\n//                 this.setState({ books: data });\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Error fetching data:', error);\r\n//             });\r\n//     }\r\n\r\n//     render() {\r\n//         const { books } = this.state;\r\n//         return (\r\n//             <div>\r\n//                 <div className='card col-md-6 offset-md-3'>\r\n//                 <h3 className='text-center'>View BookList Page</h3>\r\n//                 <div className='card-body'>\r\n//                     <div className='row'>\r\n//                         <label>Book Title: </label>\r\n//                         <div>{books.bookTitle}</div>\r\n//                     </div>\r\n\r\n//                     <div className='row'>\r\n//                         <label>Book Author: </label>\r\n//                         <div>{books.bookAuthor}</div>\r\n//                     </div>\r\n\r\n//                     <div className='row'>\r\n//                         <label>Published Year: </label>\r\n//                         <div>{books.publishedYear}</div>\r\n//                     </div>\r\n\r\n//                     <div className='row'>\r\n//                         <label>Genre: </label>\r\n//                         <div>{books.genre}</div>\r\n//                     </div>\r\n//                     <div className='text-center'>{books.isAvailable ? 'Available to borrow' : 'Not Available'}</div>\r\n\r\n//                 </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default ViewBookList;\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const ViewBookList = () => {\r\n//   const [books, setBooks] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Function to fetch book data from the API\r\n//     const fetchBooks = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8080/api/books');\r\n//         const data = await response.json();\r\n//         setBooks(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching book data:', error);\r\n//       }\r\n//     };\r\n\r\n//     // Call the fetchBooks function when the component mounts\r\n//     fetchBooks();\r\n//   }, []); // Empty dependency array ensures the effect runs only once on mount\r\n\r\n//   return (\r\n//     <div>\r\n//         <div className='card col-md-6 offset-md-3'>\r\n//         <h3 className='text-center'>Book Catalog</h3>\r\n//       <ul>\r\n//         {books.map((book) => (\r\n//           <div key={book.bookId}>\r\n//             <span className=\"label\">Book Title: {book.bookTitle}</span><br></br>\r\n//             <span className=\"label\">Book Author: {book.bookAuthor} </span><br></br>\r\n//             <span className=\"label\">Published Year: {book.publishedYear}</span><br></br>\r\n//             <span className=\"label\">Genre: {book.genre} </span><br></br>\r\n//             <div className='text-center'>{books.isAvailable ? 'Available to borrow' : 'Not Available'}</div>\r\n            \r\n//           </div>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewBookList;\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ViewBookList = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch book data from the API\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/books');\r\n        const data = await response.json();\r\n        setBooks(data);\r\n      } catch (error) {\r\n        console.error('Error fetching book data:', error);\r\n      }\r\n    };\r\n\r\n    // Call the fetchBooks function when the component mounts\r\n    fetchBooks();\r\n  }, []); // Empty dependency array ensures the effect runs only once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='text-primary'>Books Available to Borrow</h3>\r\n      <div className='bookshelf'>\r\n        {books.map((book) => (\r\n          <div key={book.bookId} className='book'>\r\n            <ol>\r\n              <li>\r\n            <span className=\"label\">Book Title: {book.bookTitle}</span><br />\r\n            <span className=\"label\">Book Author: {book.bookAuthor} </span><br />\r\n            <span className=\"label\">Published Year: {book.publishedYear}</span><br />\r\n            <span className=\"label\">Genre: {book.genre} </span></li>\r\n            <div className='availability'>\r\n              {book.isAvailable ? 'Available to borrow' : 'Not Available'}\r\n            </div>\r\n            </ol>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewBookList;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}