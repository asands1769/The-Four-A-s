{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit\\\\The-Four-A-s\\\\bookshelf-corner-react\\\\src\\\\components\\\\tag.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagList = () => {\n  _s();\n  const [tags, setTags] = useState([]);\n  const [newTagName, setNewTagName] = useState('');\n  const [newTagType, setNewTagType] = useState('');\n\n  // Function to fetch all tags\n  const fetchTags = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tags\");\n      const data = await response.json();\n      setTags(data);\n    } catch (error) {\n      console.error('Error fetching tags:', error);\n    }\n  };\n\n  // Function to create a new tag\n  const createTag = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tags\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': 'http://localhost:3000'\n        },\n        body: JSON.stringify({\n          name: newTagName,\n          type: newTagType\n        })\n      });\n      if (response.status === 201) {\n        // Tag created successfully\n        setNewTagName('');\n        setNewTagType('');\n        fetchTags(); // Refresh the tag list\n      } else {\n        console.error('Error creating tag:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error creating tag:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTags();\n  }, []); // Fetch tags on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tag List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [tag.name, \" - \", tag.type]\n      }, tag.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTagName,\n        onChange: e => setNewTagName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTagType,\n        onChange: e => setNewTagType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createTag,\n      children: \"Create Tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TagList, \"15cI4gN9OLH4AduTuwQASCUbing=\");\n_c = TagList;\nexport default TagList;\nvar _c;\n$RefreshReg$(_c, \"TagList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TagList","_s","tags","setTags","newTagName","setNewTagName","newTagType","setNewTagType","fetchTags","response","fetch","data","json","error","console","createTag","method","headers","body","JSON","stringify","name","type","status","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sumit/The-Four-A-s/bookshelf-corner-react/src/components/tag.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TagList = () => {\r\n  const [tags, setTags] = useState([]);\r\n  const [newTagName, setNewTagName] = useState('');\r\n  const [newTagType, setNewTagType] = useState('');\r\n\r\n  // Function to fetch all tags\r\n  const fetchTags = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/tags\");\r\n      const data = await response.json();\r\n      setTags(data);\r\n    } catch (error) {\r\n      console.error('Error fetching tags:', error);\r\n    }\r\n  };\r\n\r\n  // Function to create a new tag\r\n  const createTag = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/tags\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n        },\r\n        body: JSON.stringify({ name: newTagName, type: newTagType }),\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        // Tag created successfully\r\n        setNewTagName('');\r\n        setNewTagType('');\r\n        fetchTags(); // Refresh the tag list\r\n      } else {\r\n        console.error('Error creating tag:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating tag:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTags();\r\n  }, []); // Fetch tags on component mount\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tag List</h2>\r\n      <ul>\r\n        {tags.map((tag) => (\r\n          <li key={tag.id}>\r\n            {tag.name} - {tag.type}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Create New Tag</h2>\r\n      <div>\r\n        <label>Name:</label>\r\n        <input type=\"text\" value={newTagName} onChange={(e) => setNewTagName(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Type:</label>\r\n        <input type=\"text\" value={newTagType} onChange={(e) => setNewTagType(e.target.value)} />\r\n      </div>\r\n      <button onClick={createTag}>Create Tag</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}